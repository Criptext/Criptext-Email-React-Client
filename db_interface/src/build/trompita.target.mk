# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := trompita
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=trompita' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++0x \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-threadsafe-statics \
	-std=c++17 \
	-stdlib=libc++

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/include/node \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/src \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/deps/openssl/config \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/deps/openssl/openssl/include \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/deps/uv/include \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/deps/zlib \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/deps/v8/include \
	-I/usr/local/include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=trompita' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64'

# Flags passed to all source files.
CFLAGS_Release := \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++0x \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-threadsafe-statics \
	-std=c++17 \
	-stdlib=libc++

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/include/node \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/src \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/deps/openssl/config \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/deps/openssl/openssl/include \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/deps/uv/include \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/deps/zlib \
	-I/Users/jorgeblacio/Library/Caches/node-gyp/8.12.0/deps/v8/include \
	-I/usr/local/include

OBJS := \
	$(obj).target/$(TARGET)/main.o \
	$(obj).target/$(TARGET)/../src/http/http.o \
	$(obj).target/$(TARGET)/../src/http/handlers/cors.o \
	$(obj).target/$(TARGET)/../src/http/handlers/readDB.o \
	$(obj).target/$(TARGET)/../../signal_interface/src/http/handlers/helpers.o \
	$(obj).target/$(TARGET)/../src/axolotl/Account.o \
	$(obj).target/$(TARGET)/../src/axolotl/AppSettings.o \
	$(obj).target/$(TARGET)/../src/axolotl/Contact.o \
	$(obj).target/$(TARGET)/../src/axolotl/CRFile.o \
	$(obj).target/$(TARGET)/../src/axolotl/DBUtils.o \
	$(obj).target/$(TARGET)/../src/axolotl/Email.o \
	$(obj).target/$(TARGET)/../src/axolotl/EmailContact.o \
	$(obj).target/$(TARGET)/../src/axolotl/EmailLabel.o \
	$(obj).target/$(TARGET)/../src/axolotl/FeedItem.o \
	$(obj).target/$(TARGET)/../src/axolotl/FullEmail.o \
	$(obj).target/$(TARGET)/../src/axolotl/Label.o \
	$(obj).target/$(TARGET)/../src/axolotl/PendingEvent.o \
	$(obj).target/$(TARGET)/../src/axolotl/Thread.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-stdlib=libc++ \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug := \
	-stdlib=libc++ \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LDFLAGS_Release := \
	-stdlib=libc++ \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release := \
	-stdlib=libc++ \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LIBS := \
	-pthread \
	-dl/usr/local/Cellar/openssl/1.0.2s/lib/libssl.a \
	/usr/local/Cellar/openssl/1.0.2s/lib/libcrypto.a \
	/usr/local/Cellar/sqlite/3.28.0/lib/libsqlite3.a \
	/usr/local/lib/libSQLiteCpp.a \
	/usr/local/lib/libsignal-protocol-c.a \
	/usr/local/lib/libcivetweb.a \
	/usr/local/lib/libcjson.a \
	/usr/local/lib/spdlog/libspdlog.a

$(builddir)/trompita: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/trompita: LIBS := $(LIBS)
$(builddir)/trompita: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/trompita: LD_INPUTS := $(OBJS)
$(builddir)/trompita: TOOLSET := $(TOOLSET)
$(builddir)/trompita: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/trompita
# Add target alias
.PHONY: trompita
trompita: $(builddir)/trompita

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/trompita

